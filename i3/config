# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1
set $super Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal -e nvim

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

bindsym $mod+BackSpace exec qutebrowser
bindsym $mod+y exec qalculate
bindsym $mod+p exec gnome-screenshot
bindsym $mod+Shift+v exec vnc
bindsym $mod+u exec ranger_new_window

bindsym $super+2 exec 2_screen.sh
bindsym $super+d exec just_laptop.sh
bindsym $super+Shift+s exec single_large.sh
bindsym $super+s exec single_small.sh

bindsym XF86AudioRaiseVolume exec "amixer -D pulse sset Master unmute -q && amixer -q sset Master,0 1+"
bindsym XF86AudioLowerVolume exec "amixer -D pulse sset Master unmute -q && amixer -q sset Master,0 1-"
bindsym XF86AudioMute exec "amixer -D pulse sset Master toggle -q"

bindsym $super+comma exec "amixer -D pulse sset Master unmute -q && amixer -q sset Master,0 1+"
bindsym $super+period exec "amixer -D pulse sset Master unmute -q && amixer -q sset Master,0 1-"
bindsym $super+slash exec "amixer -D pulse sset Master toggle -q"

bindsym $super+semicolon exec xrandr --output eDP1 --brightness \
  $(echo "$(xrandr --verbose | grep Brightness -m 1 | grep -o '[0-9].*')+0.1" | bc)
bindsym $super+apostrophe exec xrandr --output eDP1 --brightness \
  $(echo "$(xrandr --verbose | grep Brightness -m 1 | grep -o '[0-9].*')-0.1" | bc)

bindsym XF86MonBrightnessUp exec xrandr --output eDP1 --brightness \
  $(echo "$(xrandr --verbose | grep Brightness -m 1 | grep -o '[0-9].*')+0.1" | bc)
bindsym XF86MonBrightnessDown exec xrandr --output eDP1 --brightness \
  $(echo "$(xrandr --verbose | grep Brightness -m 1 | grep -o '[0-9].*')-0.1" | bc)

bindsym $mod+grave exec "toggle-touchpad"

## alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

bindsym $mod+t move workspace to output right

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

bindsym F1 workspace 1
bindsym F2 workspace 2
bindsym F3 workspace 3
bindsym F4 workspace 4
bindsym F5 workspace 5
bindsym F6 workspace 6
bindsym F7 workspace 7
bindsym F8 workspace 8
bindsym F9 workspace 9
bindsym F10 workspace 10

# move focused container to workspace
bindsym Shift+F1 move container to workspace 1
bindsym Shift+F2 move container to workspace 2
bindsym Shift+F3 move container to workspace 3
bindsym Shift+F4 move container to workspace 4
bindsym Shift+F5 move container to workspace 5
bindsym Shift+F6 move container to workspace 6
bindsym Shift+F7 move container to workspace 7
bindsym Shift+F8 move container to workspace 8
bindsym Shift+F9 move container to workspace 9
bindsym Shift+F10 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exit

# resize window (you can also use the mouse for that)
mode "resize" {
  # These bindings trigger as soon as you enter the resize mode

  # Pressing left will shrink the window’s width.
  # Pressing right will grow the window’s width.
  # Pressing up will shrink the window’s height.
  # Pressing down will grow the window’s height.
  bindsym h resize shrink width 10 px or 10 ppt
  bindsym j resize grow height 10 px or 10 ppt
  bindsym k resize shrink height 10 px or 10 ppt
  bindsym l resize grow width 10 px or 10 ppt

  # same bindings, but for the arrow keys
  bindsym Left resize shrink width 10 px or 10 ppt
  bindsym Down resize grow height 10 px or 10 ppt
  bindsym Up resize shrink height 10 px or 10 ppt
  bindsym Right resize grow width 10 px or 10 ppt

  # back to normal: Enter or Escape
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

# bindsym XF86Calculator mode "single_sym" 
# bindsym --release XF86Calculator+q exec "xdotool key 1"

# mode "single_sym" {
#   bindsym --release q exec "xdotool key 1"; mode "default"
#   bindsym --release w exec "xdotool key 2"; mode "default"
#   bindsym --release e exec "xdotool key 3"; mode "default"
#   bindsym --release r exec "xdotool key 4"; mode "default"
#   bindsym --release t exec "xdotool key 5"; mode "default"
#   bindsym --release y exec "xdotool key 6"; mode "default"
#   bindsym --release u exec "xdotool key 7"; mode "default"
#   bindsym --release i exec "xdotool key 8"; mode "default"
#   bindsym --release o exec "xdotool key 9"; mode "default"
#   bindsym --release p exec "xdotool key 0"; mode "default"
#   bindsym --release Shift+q exec "xdotool key !"; mode "default"
#   bindsym --release Shift+w exec "xdotool key @"; mode "default"
#   bindsym --release Shift+e exec "xdotool key #"; mode "default"
#   bindsym --release Shift+r exec "xdotool key $"; mode "default"
#   bindsym --release Shift+t exec "xdotool key %"; mode "default"
#   bindsym --release Shift+y exec "xdotool key ^"; mode "default"
#   bindsym --release Shift+u exec "xdotool key &"; mode "default"
#   bindsym --release Shift+i exec "xdotool key *"; mode "default"
#   bindsym --release Shift+o exec "xdotool key ("; mode "default"
#   bindsym --release Shift+p exec "xdotool key )"; mode "default"
#   bindsym --release Escape mode "default"
# }

bindsym $mod+r mode "resize"

mode "send_keys_to_window" {
  bindsym $super+Escape mode "default"
}

bindsym $super+Escape mode "send_keys_to_window"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command exec full_status.sh
}
